{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\Projects\\\\tic_tac_toe\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport './Styles/App.css';\nimport Box9x9 from \"./Components/Box9x9/Box9x9\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst red = 'rgb(220, 20, 60)';\nconst blue = 'rgb(0, 191, 255)';\nconst marker = 'rgb(0, 40, 255)';\nfunction App() {\n  _s();\n  let [lastColor, setLastColor] = useState('');\n  let [lastId, setLastId] = useState('');\n  let [lastBox, setLastBox] = useState('');\n  //Меняет цвет блока, переключая его при ходе.\n  function changeColor(sid, box_id) {\n    var elem = document.getElementById(sid); // Блок, на который мы кликаем\n    var prevElem = document.getElementById(lastId); //Блок, на который мы в прошлый раз кликнули(по умолчанию == NUll)\n    var typecolor = window.getComputedStyle(elem, null).backgroundColor; //Цвет заднего фона блока\n    var bordercolor = window.getComputedStyle(elem, null).border; // Параметры границ блока\n    var activebox = window.getComputedStyle(elem, null).border;\n    if (typecolor === 'rgba(0, 0, 0, 0)') {\n      //проверка, что кликаем не на закрашенный блок\n      if (lastColor === red) {\n        //определяем цвет, с помощью предыдущего, чтобы не перекрашивать блоки.\n        typecolor = blue;\n        setLastColor(typecolor);\n        setLastId(sid);\n      } else {\n        typecolor = red;\n        setLastColor(typecolor);\n        setLastId(sid);\n      }\n      elem.style.backgroundColor = typecolor;\n      elem.style.border = '2px solid ' + marker; // перекрашиваем границу последнего кликнутого блока\n      if (prevElem != null) {\n        //возвращаем цвет границы назад\n        prevElem.style.border = '2px solid gold';\n      }\n      console.log(sid, lastColor, lastId, typecolor, bordercolor, activebox); // Отладка\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(Box9x9, {\n      getId: changeColor\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"UB3cpuF5FZTiNyz659MKxHQFAtw=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Box9x9","jsxDEV","_jsxDEV","red","blue","marker","App","_s","lastColor","setLastColor","lastId","setLastId","lastBox","setLastBox","changeColor","sid","box_id","elem","document","getElementById","prevElem","typecolor","window","getComputedStyle","backgroundColor","bordercolor","border","activebox","style","console","log","className","children","getId","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/HP/Projects/tic_tac_toe/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport './Styles/App.css'\nimport Box9x9 from \"./Components/Box9x9/Box9x9\";\n\nconst red = 'rgb(220, 20, 60)';\nconst blue = 'rgb(0, 191, 255)';\nconst marker = 'rgb(0, 40, 255)';\n\nfunction App() {\n  let [lastColor, setLastColor] = useState('');\n  let [lastId, setLastId] = useState('');\n  let [lastBox, setLastBox] = useState('');\n  //Меняет цвет блока, переключая его при ходе.\n  function changeColor(sid, box_id){\n    var elem = document.getElementById(sid); // Блок, на который мы кликаем\n    var prevElem = document.getElementById(lastId); //Блок, на который мы в прошлый раз кликнули(по умолчанию == NUll)\n    var typecolor = window.getComputedStyle(elem, null).backgroundColor; //Цвет заднего фона блока\n    var bordercolor = window.getComputedStyle(elem, null).border; // Параметры границ блока\n    var activebox = window.getComputedStyle(elem, null).border;\n    if (typecolor === 'rgba(0, 0, 0, 0)'){ //проверка, что кликаем не на закрашенный блок\n      if (lastColor === red){ //определяем цвет, с помощью предыдущего, чтобы не перекрашивать блоки.\n        typecolor = blue;\n        setLastColor(typecolor);\n        setLastId(sid)\n      }\n      else{\n        typecolor = red;\n        setLastColor(typecolor);\n        setLastId(sid)\n    }\n    elem.style.backgroundColor = typecolor;\n    elem.style.border = ('2px solid ' + marker); // перекрашиваем границу последнего кликнутого блока\n    if (prevElem != null){ //возвращаем цвет границы назад\n      prevElem.style.border = ('2px solid gold');\n    }\n    console.log(sid, lastColor, lastId, typecolor, bordercolor, activebox); // Отладка\n    }\n  }\n  return (\n    <div className=\"App\" >\n      <Box9x9 getId={changeColor}/>\n    </div>\n  );\n}\n\nexport default App; "],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,kBAAkB;AACzB,OAAOC,MAAM,MAAM,4BAA4B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhD,MAAMC,GAAG,GAAG,kBAAkB;AAC9B,MAAMC,IAAI,GAAG,kBAAkB;AAC/B,MAAMC,MAAM,GAAG,iBAAiB;AAEhC,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,IAAI,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAC5C,IAAI,CAACW,MAAM,EAAEC,SAAS,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EACtC,IAAI,CAACa,OAAO,EAAEC,UAAU,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EACxC;EACA,SAASe,WAAWA,CAACC,GAAG,EAAEC,MAAM,EAAC;IAC/B,IAAIC,IAAI,GAAGC,QAAQ,CAACC,cAAc,CAACJ,GAAG,CAAC,CAAC,CAAC;IACzC,IAAIK,QAAQ,GAAGF,QAAQ,CAACC,cAAc,CAACT,MAAM,CAAC,CAAC,CAAC;IAChD,IAAIW,SAAS,GAAGC,MAAM,CAACC,gBAAgB,CAACN,IAAI,EAAE,IAAI,CAAC,CAACO,eAAe,CAAC,CAAC;IACrE,IAAIC,WAAW,GAAGH,MAAM,CAACC,gBAAgB,CAACN,IAAI,EAAE,IAAI,CAAC,CAACS,MAAM,CAAC,CAAC;IAC9D,IAAIC,SAAS,GAAGL,MAAM,CAACC,gBAAgB,CAACN,IAAI,EAAE,IAAI,CAAC,CAACS,MAAM;IAC1D,IAAIL,SAAS,KAAK,kBAAkB,EAAC;MAAE;MACrC,IAAIb,SAAS,KAAKL,GAAG,EAAC;QAAE;QACtBkB,SAAS,GAAGjB,IAAI;QAChBK,YAAY,CAACY,SAAS,CAAC;QACvBV,SAAS,CAACI,GAAG,CAAC;MAChB,CAAC,MACG;QACFM,SAAS,GAAGlB,GAAG;QACfM,YAAY,CAACY,SAAS,CAAC;QACvBV,SAAS,CAACI,GAAG,CAAC;MAClB;MACAE,IAAI,CAACW,KAAK,CAACJ,eAAe,GAAGH,SAAS;MACtCJ,IAAI,CAACW,KAAK,CAACF,MAAM,GAAI,YAAY,GAAGrB,MAAO,CAAC,CAAC;MAC7C,IAAIe,QAAQ,IAAI,IAAI,EAAC;QAAE;QACrBA,QAAQ,CAACQ,KAAK,CAACF,MAAM,GAAI,gBAAiB;MAC5C;MACAG,OAAO,CAACC,GAAG,CAACf,GAAG,EAAEP,SAAS,EAAEE,MAAM,EAAEW,SAAS,EAAEI,WAAW,EAAEE,SAAS,CAAC,CAAC,CAAC;IACxE;EACF;EACA,oBACEzB,OAAA;IAAK6B,SAAS,EAAC,KAAK;IAAAC,QAAA,eAClB9B,OAAA,CAACF,MAAM;MAACiC,KAAK,EAAEnB;IAAY;MAAAoB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC1B,CAAC;AAEV;AAAC9B,EAAA,CAnCQD,GAAG;AAAAgC,EAAA,GAAHhC,GAAG;AAqCZ,eAAeA,GAAG;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}