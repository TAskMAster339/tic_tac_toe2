{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\Projects\\\\tic_tac_toe\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport './Styles/App.css';\nimport Box9x9 from \"./Components/Box9x9/Box9x9\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst red = 'rgb(220, 20, 60)';\nconst blue = 'rgb(0, 191, 255)';\nconst marker = 'rgb(0, 40, 255)';\nconst box_border = '3px solid ' + marker;\nconst number_trans = {\n  \"1\": 'One',\n  \"2\": 'Two',\n  \"3\": 'Three',\n  \"4\": 'Four',\n  \"5\": 'Five',\n  \"6\": 'Six',\n  \"7\": 'Seven',\n  \"8\": 'Eight',\n  \"9\": 'Nine'\n};\nfunction App() {\n  _s();\n  let [lastColor, setLastColor] = useState('');\n  let [lastId, setLastId] = useState('');\n  //Меняет цвет блока, переключая его при ходе.\n  function changeColor(sid, box_id) {\n    const box = document.getElementById(box_id); // Бокс в котором мы находимся\n    const elem = document.getElementById(sid); // Блок, на который мы кликаем\n    const prevElem = document.getElementById(lastId); //Блок, на который мы в прошлый раз кликнули(по умолчанию == NUll)\n    var nextBox = document.getElementById(number_trans[sid[9]]); // Следующий Бокс\n    var typecolor = window.getComputedStyle(elem, null).backgroundColor; //Цвет заднего фона блока\n    var bordercolor = window.getComputedStyle(elem, null).border; // Параметры границ блока\n    var activebox = window.getComputedStyle(box, null).border; // Параметры границ бокса(9 блоков)\n    if (typecolor === 'rgba(0, 0, 0, 0)' && activebox === box_border) {\n      //проверка, что кликаем не на закрашенный блок\n      setNewBoxID(number_trans[sid[9]]);\n      if (lastColor === red) {\n        //определяем цвет, с помощью предыдущего, чтобы не перекрашивать блоки.\n        typecolor = blue;\n        setLastColor(typecolor);\n        setLastId(sid);\n      } else {\n        typecolor = red;\n        setLastColor(typecolor);\n        setLastId(sid);\n      }\n      box.style.border = '3px solid red';\n      nextBox.style.border = box_border;\n      elem.style.backgroundColor = typecolor;\n      elem.style.border = '2px solid ' + marker; // перекрашиваем границу последнего кликнутого блока\n      if (prevElem != null) {\n        //возвращаем цвет границы назад\n        prevElem.style.border = '2px solid gold';\n      }\n      console.log(sid, lastColor, lastId, typecolor, bordercolor, activebox, number_trans[sid[9]]); // Отладка\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(Box9x9, {\n      getId: changeColor\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"KMI/Z3kTTMe4uskDON81+DuthqE=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Box9x9","jsxDEV","_jsxDEV","red","blue","marker","box_border","number_trans","App","_s","lastColor","setLastColor","lastId","setLastId","changeColor","sid","box_id","box","document","getElementById","elem","prevElem","nextBox","typecolor","window","getComputedStyle","backgroundColor","bordercolor","border","activebox","setNewBoxID","style","console","log","className","children","getId","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/HP/Projects/tic_tac_toe/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport './Styles/App.css'\nimport Box9x9 from \"./Components/Box9x9/Box9x9\";\n\nconst red = 'rgb(220, 20, 60)';\nconst blue = 'rgb(0, 191, 255)';\nconst marker = 'rgb(0, 40, 255)';\nconst box_border = ('3px solid ' + marker);\nconst number_trans = {\n  \"1\": 'One',\n  \"2\": 'Two',\n  \"3\": 'Three',\n  \"4\": 'Four',\n  \"5\": 'Five',\n  \"6\": 'Six',\n  \"7\": 'Seven',\n  \"8\": 'Eight',\n  \"9\": 'Nine'\n}\n\nfunction App() {\n  let [lastColor, setLastColor] = useState('');\n  let [lastId, setLastId] = useState('');\n  //Меняет цвет блока, переключая его при ходе.\n  function changeColor(sid, box_id){\n    const box = document.getElementById(box_id); // Бокс в котором мы находимся\n    const elem = document.getElementById(sid); // Блок, на который мы кликаем\n    const prevElem = document.getElementById(lastId); //Блок, на который мы в прошлый раз кликнули(по умолчанию == NUll)\n    var nextBox = document.getElementById(number_trans[sid[9]]); // Следующий Бокс\n    var typecolor = window.getComputedStyle(elem, null).backgroundColor; //Цвет заднего фона блока\n    var bordercolor = window.getComputedStyle(elem, null).border; // Параметры границ блока\n    var activebox = window.getComputedStyle(box, null).border; // Параметры границ бокса(9 блоков)\n    if (typecolor === 'rgba(0, 0, 0, 0)' && activebox === box_border){ \n      //проверка, что кликаем не на закрашенный блок\n      setNewBoxID(number_trans[sid[9]]);\n      if (lastColor === red){ //определяем цвет, с помощью предыдущего, чтобы не перекрашивать блоки.\n        typecolor = blue;\n        setLastColor(typecolor);\n        setLastId(sid);\n      }\n      else{\n        typecolor = red;\n        setLastColor(typecolor);\n        setLastId(sid);\n    }\n    box.style.border = ('3px solid red');\n    nextBox.style.border = box_border;\n    elem.style.backgroundColor = typecolor;\n    elem.style.border = ('2px solid ' + marker); // перекрашиваем границу последнего кликнутого блока\n    if (prevElem != null){ //возвращаем цвет границы назад\n      prevElem.style.border = ('2px solid gold');\n    }\n    console.log(sid, lastColor, lastId, typecolor, bordercolor, activebox, number_trans[sid[9]]); // Отладка\n    }\n  }\n  return (\n    <div className=\"App\" >\n      <Box9x9 getId={changeColor}/>\n    </div>\n  );\n}\n\nexport default App; "],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}